from qiskit import QuantumCircuit, QuantumRegister, ClassicalRegister
import numpy as np
import matplotlib.pyplot as plt

delta_tau = 0.1
gamma = 1
phi = 2 * np.arccos(np.exp(-2 * np.abs(gamma) * delta_tau))

n_trotter_steps = 30
n_cbits = n_trotter_steps

IYZY = QuantumCircuit(QuantumRegister(1, "anc"), QuantumRegister(4), ClassicalRegister(10 * n_cbits, "c"))
IYZY.sdg(2)
IYZY.h(2)
IYZY.sdg(4)
IYZY.h(4)
IYZY.cx(2, 3)
IYZY.cx(3, 4)
IYZY.crx(phi, 4, 0)
IYZY.measure(0, 0 + 10 * (n_cbits - 1))
IYZY.cx(3, 4)
IYZY.cx(2, 3)
IYZY.h(4)
IYZY.s(4)
IYZY.h(2)
IYZY.s(2)
plt.show()

IXZX = QuantumCircuit(QuantumRegister(1, "anc"), QuantumRegister(4), ClassicalRegister(10 * n_cbits))
IXZX.h(2)
IXZX.h(4)
IXZX.cx(2, 3)
IXZX.cx(3, 4)
IXZX.crx(phi, 4, 0)
IXZX.measure(0, 1 + 10 * (n_cbits - 1))
IXZX.cx(3, 4)
IXZX.cx(2, 3)
IXZX.h(4)
IXZX.h(2)

IIII = QuantumCircuit(QuantumRegister(1, "anc"), QuantumRegister(4), ClassicalRegister(10 * n_cbits))

IIIZ = QuantumCircuit(QuantumRegister(1, "anc"), QuantumRegister(4), ClassicalRegister(10 * n_cbits))
IIIZ.x(4)
IIIZ.crx(phi, 4, 2)
IIIZ.x(4)
IIIZ.measure(0, 2 + 10 * (n_cbits - 1))

IZII = QuantumCircuit(QuantumRegister(1, "anc"), QuantumRegister(4), ClassicalRegister(10 * n_cbits))
IZII.x(2)
IZII.crx(phi, 2, 3)
IZII.x(2)
IZII.measure(0, 3 + 10 * (n_cbits - 1))

YZYI = QuantumCircuit(QuantumRegister(1, "anc"), QuantumRegister(4), ClassicalRegister(10 * n_cbits))
YZYI.sdg(1)
YZYI.h(1)
YZYI.sdg(3)
YZYI.h(3)
YZYI.cx(1, 2)
YZYI.cx(2, 3)
YZYI.crx(phi, 3, 0)
YZYI.measure(0, 4 + 10 * (n_cbits - 1))
YZYI.cx(2, 3)
YZYI.cx(1, 2)
YZYI.h(3)
YZYI.s(3)
YZYI.h(1)
YZYI.s(1)

XZXI = QuantumCircuit(QuantumRegister(1, "anc"), QuantumRegister(4), ClassicalRegister(10 * n_cbits))
XZXI.h(1)
XZXI.h(3)
XZXI.cx(1, 2)
XZXI.cx(2, 3)
XZXI.crx(phi, 3, 0)
XZXI.measure(0, 5 + 10 * (n_cbits - 1))
XZXI.cx(2, 3)
XZXI.cx(1, 2)
XZXI.h(3)
XZXI.h(1)

IIZI = QuantumCircuit(QuantumRegister(1, "anc"), QuantumRegister(4), ClassicalRegister(10 * n_cbits))
IIZI.x(3)
IIZI.crx(phi, 3, 0)
IIZI.x(3)
IIZI.measure(0, 6 + 10 * (n_cbits - 1))

ZIII = QuantumCircuit(QuantumRegister(1, "anc"), QuantumRegister(4), ClassicalRegister(10 * n_cbits))
ZIII.x(1)
ZIII.crx(phi, 1, 0)
ZIII.x(1)
ZIII.measure(0, 7 + 10 * (n_cbits - 1))

IIZZ = QuantumCircuit(QuantumRegister(1, "anc"), QuantumRegister(4), ClassicalRegister(10 * n_cbits))
IIZZ.cx(3, 4)
IIZZ.x(4)
IIZZ.crx(phi, 4, 0)
IIZZ.x(4)
IIZZ.measure(0, 8 + 10 * (n_cbits - 1))
IIZZ.cx(3, 4)


ZZII = QuantumCircuit(QuantumRegister(1, "anc"), QuantumRegister(4), ClassicalRegister(10 * n_cbits))
ZZII.cx(1, 2)
ZZII.x(2)
ZZII.crx(phi, 2, 0)
ZZII.x(2)
ZZII.measure(0, 9 + 10 * (n_cbits - 1))
ZZII.cx(1, 2)
